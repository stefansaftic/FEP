/*! FEP 2014-04-16 */
(function(){var ATOB,FController,FGame,FInit,FLog,SNAKE,root,__hasProp={}.hasOwnProperty,__extends=function(a,b){function c(){this.constructor=a}for(var d in b)__hasProp.call(b,d)&&(a[d]=b[d]);return c.prototype=b.prototype,a.prototype=new c,a.__super__=b.prototype,a};root="undefined"!=typeof exports&&null!==exports?exports:window,FGame=function(){function a(a,b,c){this.name=a,this.version=b,this.debug=null!=c?c:0,this.status="created",this.initData(),this.logger=new FLog(this.debug)}return a.prototype.start=function(){return this.status="started"},a.prototype.end=function(){return this.status="ended"},a.prototype.pause=function(){return"started"===this.status?this.status="paused":"paused"===this.status?this.status="started":this.logger.log("Paused while game status is: "+this.status)},a.prototype.initData=function(){return this.data={}},a}(),null==root.FEP&&(root.FEP={}),root.FEP.FGame=FGame,root="undefined"!=typeof exports&&null!==exports?exports:window,ATOB=function(a){function b(a){this.debug=null!=a?a:0,b.__super__.constructor.call(this,"ATOB","1.0",this.debug)}return __extends(b,a),b.prototype.initData=function(){return this.data={score:0,ground:[[0,0,0,0],[0,1,0,0],[0,1,0,0],[0,0,0,-2]],player:{x:0,y:0},lock:!1,n:4}},b.prototype.start=function(){return b.__super__.start.call(this),radio("render").broadcast(this.data.ground),radio("renderPlayer").broadcast(this.data.player),this.logger.log("Game ATOB started"),radio("moveUp").subscribe([this.moveUp,this]),radio("moveDown").subscribe([this.moveDown,this]),radio("moveLeft").subscribe([this.moveLeft,this]),radio("moveRight").subscribe([this.moveRight,this])},b.prototype.validateMove=function(a){return this.data.ground[a.x][a.y]<=0?!0:!1},b.prototype.checkFinish=function(a){return-2===this.data.ground[a.x][a.y]?this.end():void 0},b.prototype.moveDown=function(){var a;return this.data.lock===!1&&this.data.n>this.data.player.x+1?(this.data.lock=!0,a={x:this.data.player.x,y:this.data.player.y},a.x++,this.validateMove(a)?(this.checkFinish(a),this.data.player=a,radio("renderMoveDown").broadcast(!0)):radio("renderMoveDown").broadcast(!1),this.data.lock=!1):void 0},b.prototype.moveUp=function(){var a;return this.data.lock===!1&&0<=this.data.player.x-1?(this.data.lock=!0,a={x:this.data.player.x,y:this.data.player.y},a.x--,this.validateMove(a)?(this.checkFinish(a),this.data.player=a,radio("renderMoveUp").broadcast(!0)):radio("renderMoveUp").broadcast(!1),this.data.lock=!1):void 0},b.prototype.moveLeft=function(){var a;return this.data.lock===!1&&0<=this.data.player.y-1?(this.data.lock=!0,a={x:this.data.player.x,y:this.data.player.y},a.y--,this.validateMove(a)?(this.checkFinish(a),this.data.player=a,radio("renderMoveLeft").broadcast(!0)):radio("renderMoveLeft").broadcast(!1),this.data.lock=!1):void 0},b.prototype.moveRight=function(){var a;return this.data.lock===!1&&this.data.n>this.data.player.y+1?(this.data.lock=!0,a={x:this.data.player.x,y:this.data.player.y},a.y++,this.validateMove(a)?(this.logger.log("Moved right"),this.checkFinish(a),this.data.player=a,radio("renderMoveRight").broadcast(!0)):radio("renderMoveRight").broadcast(!1),this.data.lock=!1):void 0},b}(FGame),null==root.FEP&&(root.FEP={}),root.FEP.ATOB=ATOB,root="undefined"!=typeof exports&&null!==exports?exports:window,SNAKE=function(a){function b(a){this.debug=null!=a?a:0,b.__super__.constructor.call(this,this.debug),this.logger.log("But it is a snake game")}return __extends(b,a),b.prototype.validP=function(a){return a>=0&&a<this.data.n},b.prototype.validateMove=function(a){return this.data.ground[a.x][a.y]>=0?!0:!1},b.prototype.loop=function(){var a;return a={x:this.data.player.x+this.data.direction.x,y:this.data.player.y+this.data.direction.y},this.validP(a.x)&&this.validP(a.y)&&this.validateMove(a)?this.move(a):(this.data.direction={x:0,y:0},this.end())},b.prototype.move=function(a){return this.data.tmpdir=this.data.direction,this.logger.log(a),this.data.ground[a.x][a.y]>0&&(this.data.tailAdd+=2*this.data.ground[a.x][a.y]),this.data.ground[this.data.player.x][this.data.player.y]=-2,this.data.ground[a.x][a.y]=-1,this.data.tail.push(a),this.data.player=a,0===this.data.tailAdd?(this.data.ground[this.data.tail[0].x][this.data.tail[0].y]=0,this.data.tail.shift()):this.data.tailAdd--,radio("renderAll").broadcast(this.data.ground)},b.prototype.moveDown=function(){return-1!==this.data.tmpdir.y?this.data.direction={x:0,y:1}:void 0},b.prototype.moveUp=function(){return 1!==this.data.tmpdir.y?this.data.direction={x:0,y:-1}:void 0},b.prototype.moveLeft=function(){return 1!==this.data.tmpdir.x?this.data.direction={x:-1,y:0}:void 0},b.prototype.moveRight=function(){return-1!==this.data.tmpdir.x?this.data.direction={x:1,y:0}:void 0},b.prototype.initData=function(){return this.data={score:0,ground:[[-2,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]],player:{x:0,y:0},tail:[{x:0,y:0}],direction:{x:1,y:0},tmpdir:{x:1,y:0},tailAdd:2,n:10}},b}(ATOB),null==root.FEP&&(root.FEP={}),root.FEP.SNAKE=SNAKE,root="undefined"!=typeof exports&&null!==exports?exports:window,FLog=function(){function a(a){this.debug=a}return a.prototype.log=function(a){if(0!==this.debug){if("undefined"!=typeof console&&null!==console)return console.log(a);if("undefined"!=typeof alert&&null!==alert)return alert(a)}},a}(),null==root.FEP&&(root.FEP={}),root.FEP.FLog=FLog,root="undefined"!=typeof exports&&null!==exports?exports:window,FInit=function(){function a(a,b,c){this.game=a,this.controller=b,this.data=c,this.frame=0}return a.prototype.onReady=function(){return this.game.start(),this.loop()},a.prototype.loop=function(){return requestAnimationFrame(this.loop.bind(this)),0!==this.data.skip&&this.data.skip!==this.frame?this.frame++:(this.frame=0,this.game.loop())},a}(),null==root.FEP&&(root.FEP={}),root.FEP.FInit=FInit,root="undefined"!=typeof exports&&null!==exports?exports:window,FController=function(){function FController(a,b){switch(this.type=a,this.debug=b,this.logger=new FLog(this.debug),this.mapKeys={},this.type){case"keyboard":document.addEventListener("keydown",this.trigger.bind(this));break;case"custom":this.logger.log("Custom controller");break;default:this.logger.log("Controller type:"+this.type+" not implemented")}}return FController.prototype.mapKey=function(a,b){return this.mapKeys[a]=b},FController.prototype.unmapKey=function(a){return null!=this.mapKeys[a]?delete this.mapKeys[a]:void 0},FController.prototype.trigger=function(event){switch(this.type){case"keyboard":return null!=this.mapKeys[event.keyCode]?"function"==typeof this.mapKeys[event.keyCode]?this.mapKeys[event.keyCode]():eval(this.mapKeys[event.keyCode]):this.logger.log(event.keyCode);case"custom":return null!=this.mapKeys[event.keyCode]?"function"==typeof this.mapKeys[event.keyCode]?this.mapKeys[event.keyCode]():eval(this.mapKeys[event.keyCode]):this.logger.log(event.keyCode);default:return this.logger.log("Controller type:"+this.type+" not implemented")}},FController}(),null==root.FEP&&(root.FEP={}),root.FEP.FController=FController}).call(this);